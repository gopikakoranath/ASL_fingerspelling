import numpy as np
import cv2
import tensorflow as tf

# Load the TFLite model
interpreter = tf.lite.Interpreter(model_path="modelv2.tflite")
interpreter.allocate_tensors()

# Get input and output details
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# Example frame for inference (you can use an actual image here)
frame = np.random.rand(128, 128, 3)  # Random data for testing, replace with actual image

# Preprocess the frame (ensure it's in the correct format)
def preprocess_frame(frame, target_size=(128, 128)):
    frame_resized = cv2.resize(frame, target_size)
    frame_normalized = frame_resized / 255.0  # Normalize the image
    return np.expand_dims(frame_normalized, axis=0).astype(np.float32)  # Ensure float32

input_data = preprocess_frame(frame)
interpreter.set_tensor(input_details[0]['index'], input_data)

# Run inference
interpreter.invoke()

# Get output tensor
output_data = interpreter.get_tensor(output_details[0]['index'])
print("Output Data:", output_data)

# Predicted class (if itâ€™s a classification task)
predicted_class = np.argmax(output_data)
print("Predicted Class:", predicted_class)
